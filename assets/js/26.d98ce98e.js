(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{540:function(n,e,t){"use strict";t.r(e);var s=t(25),a=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"docker-kubernetes-安装-centos-7-6"}},[n._v("Docker & Kubernetes 安装(CentOS 7.6)")]),n._v(" "),t("h2",{attrs:{id:"安装docker"}},[n._v("安装docker")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 移除旧版本docker")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" yum remove docker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n                  docker-client "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n                  docker-client-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n                  docker-common "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n                  docker-latest "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n                  docker-latest-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n                  docker-logrotate "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n                  docker-engine\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 更新yum源")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" yum update\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 配置docker-ce源")]),n._v("\nyum-config-manager "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    --add-repo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 安装docker")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" docker-ce docker-ce-cli containerd.io\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 配置加速地址")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("tee")]),n._v(" /etc/docker/daemon.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<-")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('\'EOF\'\n{\n   "registry-mirrors": ["https://registry.docker-cn.com"]\n}\nEOF')]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 重启服务")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl restart docker\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 开启docker服务")]),n._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("enable")]),n._v(" docker.service\n")])])]),t("h2",{attrs:{id:"安装kubernetes"}},[n._v("安装Kubernetes")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 配置k8s阿里源")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" /etc/yum.repos.d/kubernetes.repo")]),n._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 安装基本工具")]),n._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" -y kubelet kubeadm kubectl\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 关闭swap")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" swapoff -a\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 同时永久禁掉swap分区，打开如下文件注释掉swap那一行")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("vi")]),n._v(" /etc/fstab\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 重启服务")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" systemctl restart docker\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 国内环境安装(国外环境直接：kubeadm config images pull)")]),n._v("\nkubeadm config images list --kubernetes-version v1.20.1\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 上面命令在本机得到如下结果:")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# k8s.gcr.io/kube-apiserver:v1.20.1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# k8s.gcr.io/kube-controller-manager:v1.20.1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# k8s.gcr.io/kube-scheduler:v1.20.1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# k8s.gcr.io/kube-proxy:v1.20.1")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# k8s.gcr.io/pause:3.2")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# k8s.gcr.io/etcd:3.4.13-0")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# k8s.gcr.io/coredns:1.7.0")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 获取所有相关的镜像(非官方镜像，是网友复制过来的，所以pull之后我们要调整tag)")]),n._v("\ndocker pull imdingtalk/kube-apiserver:v1.20.1\ndocker pull imdingtalk/kube-controller-manager:v1.20.1\ndocker pull imdingtalk/kube-scheduler:v1.20.1\ndocker pull imdingtalk/kube-proxy:v1.20.1\ndocker pull imdingtalk/pause:3.2\ndocker pull imdingtalk/etcd:3.4.13-0\ndocker pull imdingtalk/coredns:1.7.0\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 修改docker的tag")]),n._v("\ndocker tag imdingtalk/kube-apiserver:v1.20.1 k8s.gcr.io/kube-apiserver:v1.20.1\ndocker tag imdingtalk/kube-controller-manager:v1.20.1 k8s.gcr.io/kube-controller-manager:v1.20.1\ndocker tag imdingtalk/kube-scheduler:v1.20.1 k8s.gcr.io/kube-scheduler:v1.20.1\ndocker tag imdingtalk/kube-proxy:v1.20.1 k8s.gcr.io/kube-proxy:v1.20.1\ndocker tag imdingtalk/pause:3.2 k8s.gcr.io/pause:3.2\ndocker tag imdingtalk/etcd:3.4.13-0 k8s.gcr.io/etcd:3.4.13-0\ndocker tag imdingtalk/coredns:1.7.0 k8s.gcr.io/coredns:1.7.0\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 移除网友复制的docker")]),n._v("\ndocker rmi imdingtalk/kube-apiserver:v1.20.1\ndocker rmi imdingtalk/kube-controller-manager:v1.20.1\ndocker rmi imdingtalk/kube-scheduler:v1.20.1\ndocker rmi imdingtalk/kube-proxy:v1.20.1\ndocker rmi imdingtalk/pause:3.2\ndocker rmi imdingtalk/etcd:3.4.13-0\ndocker rmi imdingtalk/coredns:1.7.0\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 初始化集群控制平面（注意版本要与上面的镜像一致）")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("echo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" /proc/sys/net/bridge/bridge-nf-call-iptables\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("echo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("1")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" /proc/sys/net/bridge/bridge-nf-call-ip6tables\n\nsystemctl start kubelet\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("enable")]),n._v(" kubelet\nkubeadm init --kubernetes-version v1.20.1 --pod-network-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("10.244")]),n._v(".0.0/16\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 成功后，输出如下")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# -------------------------------")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# Your Kubernetes control-plane has initialized successfully!")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# To start using your cluster, you need to run the following as a regular user:")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#   mkdir -p $HOME/.kube")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#   sudo chown $(id -u):$(id -g) $HOME/.kube/config")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# Alternatively, if you are the root user, you can run:")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#   export KUBECONFIG=/etc/kubernetes/admin.conf")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# You should now deploy a pod network to the cluster.")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v('# Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:')]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#   https://kubernetes.io/docs/concepts/cluster-administration/addons/")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# Then you can join any number of worker nodes by running the following on each as root:")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# kubeadm join 10.10.11.151:6443 --token 10vmvn.44wewitk773o6qb9 \\")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#     --discovery-token-ca-cert-hash sha256:201917665b8b42e56a575e0940bdce4039b0cb0fbbc014a1753e6e35508acb12")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# -------------------------------")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 根据提示，切换到正常用户下，执行以下命令:")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("mkdir")]),n._v(" -p "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[n._v("$HOME")]),n._v("/.kube\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("cp")]),n._v(" -i /etc/kubernetes/admin.conf "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[n._v("$HOME")]),n._v("/.kube/config\n"),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("chown")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("id")]),n._v(" -u"),t("span",{pre:!0,attrs:{class:"token variable"}},[n._v(")")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("id")]),n._v(" -g"),t("span",{pre:!0,attrs:{class:"token variable"}},[n._v(")")])]),n._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[n._v("$HOME")]),n._v("/.kube/config\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);